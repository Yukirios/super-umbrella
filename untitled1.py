# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FSNaDc35ACOrPrarQv5wKn_FpiTUE4ne
"""

import seaborn as sns #lets present it smooth, features for plotting
import numpy as np #as a math module 
import pandas as pd #as an addition to math module to adjusting series
import matplotlib.pyplot as plt #plotting 
from scipy.signal import argrelextrema #to define local extrema

"""Firstly, acquire the data. Its excel files ive got"""

DataFrame = pd.read_excel("AcrO.xls", usecols= [0,1], names= ['Wavelength(nm)', 'Absorption'])
DataFrame.set_index('Wavelength(nm)', inplace=True) #set the nm indexing
print(DataFrame)

"""Now plot as scatter to check whether its ok"""

sns.set_theme()
plot = sns.scatterplot(data=DataFrame, x= "Wavelength(nm)", y= "Absorption", legend='auto')

"""Find the max point and the corresponding thing"""

AbsMax = DataFrame['Absorption'].max() #define the maxima 
WaveMax = DataFrame['Absorption'].idxmax() #where the max is or at
WaveMax, AbsMax

"""Draw the line to show it, still on scatter"""

sns.set_theme()
plot = sns.scatterplot(data=DataFrame, x= "Wavelength(nm)", y= "Absorption", legend='auto')
plot.axvline(WaveMax)

"""Picking other dataset, doing the same steps"""

df0 = pd.read_excel('methylene_blue.xlsx', usecols=[0,1], names= ['Wavelength(nm)', 'Abs0'])
df0.set_index('Wavelength(nm)', inplace=True)
AbsMax0 = df0['Abs0'].max()  
WaveMax0 = df0['Abs0'].idxmax() 
sns.set_theme()
plot0 = sns.scatterplot(data=df0, x= "Wavelength(nm)", y= "Abs0", legend='auto')
plot0.axvline(WaveMax0)

"""Define a function to describe appearing peaks"""

def Maxima():
#summarize maxima data
  
  for i,row in df.dropna().iterrows():
      print(f'Local maximum as well is {row.values[0]} at {i} nm')

  absm = str(row['max'].max())
  wavem = str(i)
  print(f'\n~The most intense maximum is {absm} at {i} nm')

"""The complete code"""

excel_file = open('methylene_blue.xlsx')

df = pd.read_excel('methylene_blue.xlsx', usecols=[0,1], 
                    names= ['Wavelength(nm)', 'Absorption'])
df.set_index('Wavelength(nm)', inplace=True)

#adding local maxima
n = 18 #checking close up dots, kinda the amount of maxima, manually, see below
df.assign() #create additional column in df1, its 3 now
df['max'] = df.iloc[argrelextrema(df.values, np.greater_equal,
                    order=n)[0]]['Absorption'] 
                    #appends indeces of relative extrema found by comparing 
                    #values of the dots nearby(n) to new column, tuple <3

def Maxima():
#summarize maxima data and visualize
  
  for i,row in df.dropna().iterrows():
      
      print(f'Local maximum as well is {row.values[0]} at {i} nm')

  absm = df['Absorption'].max()
  wavem = df['Absorption'].idxmax()
  print(f'\n~The most intense maximum is {absm} at {wavem} nm \n')
  print(df['max'].dropna())
#plotting
  sns.set_theme()
  plt.axvline(x=int(wavem), c='violet', linestyle='dashed') #vertical line of violet to the most intense
  plt.scatter(df.index, df['max'], c='g') #local maxima
  plt.plot(df.index, df['Absorption'])#smooth spectrum line
  plt.legend(["_",'Absorption'])
  plt.title(excel_file.name.split(".")[0])
  plt.xlabel('Wavelength(nm)')
  plt.show() #show the plot???? mb useless as sometimes shows itself

Maxima()

df.info(name)

class Peak:
  #describes a peak of a spectrum
  
  def __init__(self, wave, abs):
    #creates a peak at nm and abs
    self.wave = Wavelength
    self.abs = Intensity